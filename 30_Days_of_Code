//// Hackerrank
//// 30 Days of Code

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Day 0: Hello, World.
// Read a full line of input from stdin and save it to our dynamically typed variable, input_string.

// Declare a variable named 'inputString' to hold our input.
String inputString; 
        
// Read a full line of input from stdin (cin) and save it to our variable, input_string.
inputString = Console.ReadLine(); 
        
// Print a string literal saying "Hello, World." to stdout using cout.
Console.WriteLine("Hello, World.");
Console.WriteLine(inputString);
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Day 1: Data Types
// Declare second integer, double, and String variables.

int int_2 = Convert.ToInt32(Console.ReadLine().Trim());
double double_2 = Convert.ToDouble(Console.ReadLine().Trim());
string string_2 = Console.ReadLine().Trim();

// Read and save an integer, double, and String to your variables.
int sum_int = i + int_2;
double sum_double =  d + double_2;
string sum_string = s + string_2;

//Print the sum of both integer variables on a new line.
Console.WriteLine(sum_int);

//Print the sum of the double variables on a new line.
Console.WriteLine(sum_double.ToString("0.0"));

// Concatenate and print the String variables on a new line
Console.WriteLine(sum_string);
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Day 2: Operators

public static void solve(double meal_cost, int tip_percent, int tax_percent)
{
   double total_cost;
   total_cost = Math.Round(meal_cost + meal_cost * tip_percent / 100 +   meal_cost * tax_percent / 100);
   Console.WriteLine(total_cost);
 }
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 // Day 3:Intro to Conditional Statements
 
public static void Main(string[] args)
{
    int N = Convert.ToInt32(Console.ReadLine().Trim());

    if (N % 2 != 0)
      Console.WriteLine("Weird");
    if (N % 2 == 0 && N >= 2 && N < 5)
       Console.WriteLine("Not Weird");
    if (N % 2 == 0 && N >= 6 && N <= 20)
        Console.WriteLine("Weird");
    if (N % 2 == 0 && N > 20)
        Console.WriteLine("Not Weird");
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 4: Class vs. Instance


class Person {
  public int age;     
  public Person(int initialAge)
  {
    // Add some more code to run some checks on initialAge
    this.age=initialAge;
  }
  public void amIOld() 
  {
    // Do some computations in here and print out the correct statement to the console 
    if (this.age < 0)
    {
      Console.WriteLine("Age is not valid, setting age to 0.");
      this.age = 0;
      amIOld();
    }
    else if (this.age < 13)
      Console.WriteLine("You are young.");
    else if (this.age < 18)
      Console.WriteLine("You are a teenager.");
    else if (this.age >= 18)
      Console.WriteLine("You are old.");
   }

   public void yearPasses()
   {
     // Increment the age of the person in here
     age+=1;
    }

    static void Main(String[] args) 
    {
      int T=int.Parse(Console.In.ReadLine());
      for (int i = 0; i < T; i++) 
      {
        int age=int.Parse(Console.In.ReadLine());
        Person p=new Person(age);
        p.amIOld();
        for (int j = 0; j < 3; j++)
        {
           p.yearPasses();
        }
        p.amIOld();
        Console.WriteLine();
      }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 5: Loops

class Solution
{
    public static void Main(string[] args)
    {
        int n = Convert.ToInt32(Console.ReadLine().Trim());
        for(int i=1;i<=10;i++)
        {
            Console.WriteLine(n.ToString()+" x "+i.ToString()+" = "+ i*n);
        }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 6: Let's Review


static void Main(String[] args) 
 {
     /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your   class should be named Solution */
     int n = Convert.ToInt32(Console.ReadLine());
     List<string> input = new List<string>();
     for(int i=0;i<n;i++)
     {
        string s = Console.ReadLine();
        input.Add(s);
     }

     for(int j=0;j<input.Count;j++)
     {
        var evens =string.Concat(input[j].Where((c, i) => i % 2 == 0));
        var odds = string.Concat(input[j].Where((c, i) => i % 2 != 0));
              
        Console.WriteLine(evens + " " + odds);
      }
 }
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 7: Arrays


static void ReverseArr(List<int> arr)
{
    for (int i = arr.Count - 1; i >= 0; i--)
      Console.Write(arr[i] + " ");
}
static void Main(string[] args)
{
   int n = Convert.ToInt32(Console.ReadLine().Trim());

   List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

    ReverseArr(arr);

}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Day 8: Dictionaries and Maps

static void Main(string[] args)
{
   int n = Int32.Parse(Console.ReadLine());
   Dictionary<string,string> phonebook = new Dictionary<string,string>();

   for (int i = 0; i < n; i++)
   {
     string[] phonebookItem = Console.ReadLine().Split(' ');
     phonebook[phonebookItem[0]] = phonebookItem[1];
   }

           
   for(int i=0;i<n;i++)
   {
     string name = Console.ReadLine();
     if (phonebook.ContainsKey(name))
     {
        Console.WriteLine(name + "=" + phonebook[name]);
     }
     else
     {
        Console.WriteLine("Not found");
     }
   }          
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 9: Recursion 3

public static int factorial(int n)
{
  if(n>1)
    return n * factorial(n-1);
  else
    return n;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 10: Binary Numbers

public static void Main(string[] args)
{
        
  int decimalNumber = int.Parse(Console.ReadLine());

  int remainder;
  string result = string.Empty;
  while (decimalNumber > 0)
  {
    remainder = decimalNumber % 2;
    decimalNumber /= 2;
    result = remainder.ToString() + result;
  }
            
   string[] subs = result.ToString().Split('0');
            
    Console.WriteLine(subs.OrderByDescending(s => s.Length).Select(s=>s.Length).First());
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 11: 2D Arrays

static void Main(string[] args) 
{
  int[][] arr = new int[6][];

   for (int i = 0; i < 6; i++)
   {
      arr[i] = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp));
   }

   int[] sum = new int[16];
   int hourglass = 0;
   for (int i = 0; i < 4; i++)
   {
     for (int j = 0; j < 4; j++)
     {
        sum[hourglass] = arr[i][j] + arr[i][j + 1] + arr[i][j + 2]
                        + arr[i + 1][j + 1] 
                        + arr[i + 2][j] + arr[i + 2][j + 1] + arr[i + 2][j + 2];
        hourglass++;
     }
    }
      Array.Sort(sum);
      Console.WriteLine(sum[15]);
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 12: Inheritance

class Student : Person{
    private int[] testScores;
    
    public Student(string FN, string LN, int I, int[] scores):base(FN,LN,I)
        {
        this.testScores = scores;
    }
    
public char Calculate()
{
    int avg=0;
    int sum=0;

    for(int i=0;i<testScores.Length;i++)
    {
       sum+=testScores[i];
    }

     int n=testScores.Length;
     avg=sum/n;


    if(avg>=90 && avg<=100)
        return('O');
    else if(avg>=80 && avg<=90)
        return('E');
    else if(avg>=70 && avg<=80)
        return('A');
    else if(avg>=55 && avg<=70)
        return('P');
    else if(avg>=40 && avg<=55)
        return('D');
    else if(avg<40)
        return('T');
    return('X');
}
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 13: Abstract Classes

class MyBook : Book{
    private int price = 0;
    public MyBook(String title, String author, int price) : base(title, author){
        this.price = price;
    }

    public override void display(){
        Console.Write("Title: {0} \nAuthor: {1} \nPrice: {2}", title, author, price);
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Day 14: Scope

class Difference {
    private int[] elements;
    public int maximumDifference;

    // Add your code here
    public Difference(int[] elements)
    {
        this.elements = elements;
    }

    public void computeDifference()
    {
        int max = 0;

        for (int i = 0; i < elements.Length; i++)
        {
            for (int j = 0; j < elements.Length; j++)
            {
                int abs = Math.Abs(elements[i] - elements[j]);
                if (abs > max) max = abs;
            }
        }

        maximumDifference = max;
    }
} 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
